header_logo_path: logo-header.png

price_group:
  name:
    base: 'Base Rate'
    external: 'External Rate'
    cancer_center: 'Cancer Center Rate'

time_zone: "Hong Kong"

accounts:
  # Most frequently used account by NU
  product_default: 75340
  revenue_account_default: 50617

financial:
  # in the format MM-DD
  fiscal_year_begins: 09-01
  journal_format:
    # Note that xml and xls have custom responders so they don't need a class_name
#    - key: xml
#    - key: xls
    - key: csv
      class_name: Journals::DefaultJournalCsv
      # mime_type: csv # This is optional if it matches the key
  default_journal_cutoff_time: "16:45"

converters:
  product_to_journal_rows: Converters::ProductToJournalRowAttributes
  order_detail_to_journal_rows: Converters::OrderDetailToJournalRowAttributes

statement_pdf:
  class_name: ExampleStatementPdf
  font_name: Roboto
  contact_name: S Wong
  enquiry_person: Miss S Wong
  email: xxx@example.com
  phone: "0000 0000"
  payee: Payee
  bank_name: Bank Name
  bank_account: 000-000-000000-000
  address_1: Address 1
  address_2: Address 2
  address_3: Address 3
  html_element: "<p>Our facility has provided access to the following equipment or service to members of your team according to our booking record. Please arrange the payment via one of the methods listed below within two weeks from the invoice date. Kindly note that failure to return this invoice by the said date could lead to suspension of all associated online booking accounts.</p>"
  email_to: 'test@example.com'
  email_cc: [ '111@example.com', '222@example.com' ]

validator:
  class_name: ValidatorDefault
  test:
    factory: # relative to Rails.root
    helper: 'spec/validator_helper' # relative to Rails.root

email:
  from: 'noreply@example.com'
  fake:
    enabled: false
    to:
    whitelist:
  exceptions:
    sender: 'noreply@example.com'
    recipients: [ 'warn@example.com', 'error@example.com' ]

support_email: ~

order_details:
  list_transformer: SplitAccounts::OrderDetailListTransformer

reservations:
  grace_period: <%= 5.minutes %>
  timeout_period: <%= 12.hours %>

occupancies:
  timeout_period: <%= 12.hours %>

billing:
  review_period: <%= 7.days %>
  show_create_journal: false


relays:
  test:
    admin_enabled: false
    reservation_enabled: false
  development:
    admin_enabled: false
    reservation_enabled: false
  staging:
    admin_enabled: true
    reservation_enabled: false
  production:
    admin_enabled: true
    reservation_enabled: true

#
# For these settings use SettingsHelper#feature_on?
feature:
  global_billing_administrator: true
  global_billing_administrator_users_tab: true
  create_users: true
  lookup_netids: true
  limit_short_description: true
  order_assignment_notifications: true
  password_update: false
  profile_update: true
  expense_accounts: true
  edit_accounts: true
  suspend_accounts: true
  product_specific_contacts: true
  training_requests: true
  daily_view: true
  split_accounts: true
  print_order_detail: false
  user_based_price_groups: true
  my_files: true
  # results file notifications requires that my_files be on as well
  results_file_notifications: true
  set_statement_search_start_date: false
  send_statement_emails: true
  ready_for_journal_notice: true
  journals_may_span_fiscal_years: false
  equipment_list: false
  new_user_registration: false
  price_change_reason_required: true
  can_manage_global_price_groups: true
  cross_facility_reports: false
  product_list_columns: false
  azlist: false
  use_manage: false
  facility_banner_notice: true
  charge_full_price_on_cancellation: true
  price_policy_requires_note: true
  multi_facility_accounts: true
  facility_directors_can_manage_price_groups: true
  account_reference_field: false
  facility_payment_urls: false

split_accounts:
  # Roles are allowed to create Split Accounts
  create_roles:
    - administrator
    # - account_manager

# To use S3 or another Paperclip backend, you can override the configuration in the
# appropriate environment, e.g. config/settings/production.yml.
# If you wish to use it for development, add it to a `config/settings/development.local.yml`
# file (this file is gitignored).
paperclip:
  storage: filesystem
  url: ":rails_relative_url_root/system/:class/:attachment/:id_partition/:style/:safe_filename"
  path: ":rails_root/public/system/:class/:attachment/:id_partition/:style/:safe_filename"

# saml:
#   create_user: true
#   # Use login_enabled: false if you want to allow access to metadata without yet
#   # allowing login.
#   login_enabled: true
#   idp_metadata: "https://websso.example.com/idp/metadata"
#   # certificate_file: path/to/file.p12 # Optional. Do not check in to version control.
#   # driver: # Optional. Useful to override inferred SAML settings if need be.
#   #   "idp_sso_target_url": "https://websso.example.com/idp/profile/SAML2/Redirect/SSO"
#   # metadata_parse_options: # Optional. See RubySaml::IdpMetadataParser
#   #   sso_binding: ["urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"]
#   attribute_map:
#     "PersonImmutableID": "username"
#     "User.email": "email"
#     "User.FirstName": "first_name"
#     "User.LastName": "last_name"
#   # user_updating:
#   #  skip_attributes: email
#   academic_member: []

price_policy_note_options: ~
order_detail_price_change_reason_options: ~

google_analytics_key: ~

send_payment_source_requests: <%= 12.hours %>
fip_url: http://www.google.com

research_project_affiliate_id: 3

allow_affiliate: Dept

uat:
  email: ~

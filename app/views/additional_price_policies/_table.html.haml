- price_policy = price_policies.first
- price_policies_to_show = price_policies.select(&:can_purchase?) 

- select_id = Array.new

%table.table
 %thead
  %tr
   %th.actions
   %th= "#{PriceGroup.model_name.human} (#{price_policy.class.human_attribute_name(:type)})"
   - price_policies_to_show.each do |price_policy|
    - if select_id.exclude?(price_policy.id)
     - select_id << price_policy.id 
     %td= "#{price_policy.price_group.name} (#{price_policy.price_group.type_string})"

 %tbody
  - current_id = ""
  - addition_price_policies.each do |c|
   - unless current_id == c.additional_price_group_id
    - current_id = c.additional_price_group_id unless current_id == c.additional_price_group_id
    %tr
    %td
     %p= link_to t("shared.edit"), facility_instrument_additional_price_policy_additional_price_policies_path(current_facility, @product, url_date, c.additional_price_group_id)if price_policies.all?(&:editable?) && can?(:edit, PricePolicy)
     %p= link_to t("shared.remove"), facility_instrument_additional_price_policy_additional_price_policies_delete_path(current_facility, @product, url_date, c.additional_price_group_id), data: { confirm: text("views.additional_price_policies.index.delete_msg") } if price_policies.all?(&:editable?) && can?(:edit, PricePolicy)
     %p.muted= t("shared.edit") unless price_policies.all?(&:editable?) && can?(:edit, PricePolicy)
     %p.muted= t("shared.remove") unless price_policies.all?(&:editable?) && can?(:edit, PricePolicy)

    %td=c.name
   - if current_id == c.additional_price_group_id && select_id.include?(c.price_policy_id) && c.deleted_at.nil?
    %td=c.cost

:javascript
  $(".currency").attr('style', 'text-align: left');

- can_edit_accounts = SettingsHelper.feature_on? :edit_accounts

- if !@account.affiliate.nil? && @account.affiliate.name.include?(Settings.allow_affiliate) && @account.type == "NufsAccount"
  = simple_form_for AccountUser.new, url: { action: :import_user}, html: { multipart: true } do |f|
    .well.well-small#bulk-import-fields
      %h4
        %b= t(".title")
      .pull-right
        = link_to t(".download_link"), export_user_account_account_allocations_path(format: "csv"), id: "bulk-import-template"
      = f.file_field :file
      = submit_tag t(".submit"), class: ["btn", "btn-primary"], data: { disable_with: t(".submit") }

= simple_form_for(AccountUser.new, url: facility_account_allocation_update_path(current_facility, @account)) do |f|
  = f.error_messages
  = f.error_notification
  %table.table.table-striped.table-hover
    %thead
      %tr
        %th= t(".th.name")
        %th= t(".th.role")
        %th= t(".th.allocation_amt")
        %th= t(".th.expense_amt")
        %th= t(".th.quota_balance")
    %tbody
    - @account_users.each do |od|
      = f.simple_fields_for od.id.to_s, od do |p|
        - if od.user != @account.owner_user
          %tr
            %td= Users::NamePresenter.new(od.user, username_label: true).full_name
            %td= AccountUserPresenter.new(od).localized_role
            %td= p.input :allocation_amt, label: false
            %td= od.expense
            %td= od.quota_balance
            = p.hidden_field :id ,  value: AccountUserPresenter.new(od).id.to_s
  = f.button :submit, t(".save"), class: "btn btn-primary"

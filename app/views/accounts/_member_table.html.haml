- can_edit_accounts = SettingsHelper.feature_on? :edit_accounts

- if can_edit_accounts
  %p
    = link_to t(".add_access"),
      current_facility ? user_search_facility_account_account_users_path(current_facility, @account) : user_search_account_path(@account),
      class: "btn-add"

  - if !@account.affiliate.nil? && @account.affiliate.name.include?(Settings.allow_affiliate) && @account.type == "NufsAccount"
    -# = simple_form_for :account_user, url: { action: :import_user}, html: { multipart: true } do |f|
    = simple_form_for :account_user, url: current_facility ? import_user_facility_account_account_users_path() : import_user_account_account_users_path(), html: { multipart: true } do |f|
  
      .well.well-small#bulk-import-fields
        %h4
          %b= t(".title")
        .pull-right
          = link_to t(".download_link"), "#{root_path}templates/payment_source_user_import_template.csv", id: "bulk-import-template"
        = f.file_field :file
        = submit_tag t(".submit"), class: ["btn", "btn-primary"], data: { disable_with: t(".submit") }

%table.table.table-striped.table-hover
  %thead
    %tr
      - if can_edit_accounts
        %th
      %th= t(".th.name")
      %th= t(".th.dept")
      %th= t(".th.user_type")
      %th= t(".th.email")
      %th= t(".th.role")
      = render_view_hook("member_table_headers")

  %tbody
    - @account.account_users.active.each do |au|
      %tr
        - if can_edit_accounts
          %td
            - if au.user != @account.owner_user
              = link_to t(".remove_access"),
                open_or_facility_path("account_account_user", @account, au),
                data: { confirm: t("shared.confirm_message") },
                method: :delete

        %td= Users::NamePresenter.new(au.user, username_label: true).full_name
        %td= au.user.dept_abbrev
        %td= au.user.user_type
        %td= au.user.email

        - role = ""
        - if AccountUserPresenter.new(au).localized_role == "Purchaser"
          %td= "Member"
        - else 
          %td= AccountUserPresenter.new(au).localized_role
        
        = render_view_hook("member_table_columns", account_user: au)

      